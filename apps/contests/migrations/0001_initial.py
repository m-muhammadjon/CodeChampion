# Generated by Django 4.2 on 2023-06-25 11:40

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('problems', '0010_alter_attempt_error_test_case'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0004_alter_programminglanguage_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('penalty_per_attempt', models.IntegerField(default=5)),
                ('is_private', models.BooleanField(default=False)),
                ('programming_languages', models.ManyToManyField(related_name='contests', to='common.programminglanguage')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contestant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_points', models.IntegerField(default=0)),
                ('total_penalties', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contestants', to='contests.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('symbol', models.CharField(max_length=3)),
                ('point', models.IntegerField(default=1)),
                ('attempted_users_count', models.IntegerField(default=0)),
                ('solved_users_count', models.IntegerField(default=0)),
                ('total_attempts_count', models.IntegerField(default=0)),
                ('total_accepted_count', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='contests.contest')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to='problems.problem')),
            ],
            options={
                'ordering': ['symbol'],
                'unique_together': {('contest', 'symbol')},
            },
        ),
        migrations.CreateModel(
            name='ContestParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='contests.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participated_contests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestantProblemInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attempt_count', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('penalties', models.IntegerField(default=0)),
                ('is_solved', models.BooleanField(default=False)),
                ('solved_at', models.DateTimeField(blank=True, null=True)),
                ('is_first_solved', models.BooleanField(default=False)),
                ('contest_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.contestproblem')),
                ('contestant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_infos', to='contests.contestant')),
            ],
            options={
                'ordering': ['contest_problem__symbol'],
            },
        ),
    ]
